---
version: "3.7"
services:

  traefik:
    image: traefik:v2.2
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=adrixop95@me.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - elk

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      ELASTIC_PASSWORD: adminadmin123
      discovery.type: single-node
    volumes:
      - type: bind
        source: ./elk/elasticsearch/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elk
    
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.0
    container_name: kibana
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.kibana.rule=Host(`${URL}`)
      - traefik.http.services.kibana.loadbalancer.server.port=5601
      - traefik.http.routers.kibana.entrypoints=web-secure
      - traefik.http.middlewares.kibana.headers.accessControlAllowCredentials=true
      - traefik.http.middlewares.kibana.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH
      - traefik.http.middlewares.kibana.headers.accesscontrolalloworigin=origin-list-or-null
      - traefik.http.middlewares.kibana.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.kibana.headers.addvaryheader=true
      - traefik.http.routers.kibana.tls=true
      - traefik.http.routers.kibana.tls.certresolver=letsencrypt
    volumes:
      - type: bind
        source: ./elk/kibana/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    networks:
      - elk
    depends_on: 
      - elasticsearch

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.9.0
    container_name: metricbeat
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - KIBANA_HOST=http://kibana:5601
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=adminadmin123
    volumes:
      - type: bind
        source: ./elk/metricbeat/metricbeat.yml
        target: /usr/share/metricbeat/metricbeat.yml
        read_only: true
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - metricbeat:/usr/share/metricbeat/data
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    networks:
      - elk
    depends_on: 
      - elasticsearch

volumes:
    elasticsearch:
    metricbeat:
    filebeat:

networks:
  elk:
    driver: bridge